Card (possibly have each individual card inherit from an abstract Card)
    No inheritance, it's not needed. Instead, I'm using a CardList enum that defines what the cards can be.
    CardList defines the name, colour, cost, and function(? description?) of the card
        To define the function, need certain flags and CardEffect objects
        CardEffects define the thing (tower, wall, resource) being affected, the player being affected, and the amount they are being affected by
        Flags include cannotDiscard, playAgain
        Or maybe unique effects that inherit from CardEffect?
            CannotDiscard
            DrawCard
            DiscardCard
            PlayAgain
            All the ones that include an "if" aspect (Parity, Elven Archers, etc)
Deck? (or just generate a random card in the Hand at the beginning of a turn)
Player (User & Enemy)
  Tower
  Wall
  Hand (contains available Cards)
Resources (not sure whether to keep as one class or make it a container for smaller classes)
  Quarry
    Bricks
  Magic
    Gems
  Zoo
    Beasts
WinCondition
LoseCondition (maybe?)
StartCondition

Taking a turn would be a Player method
	-Start with playing a card (if the card says "play again", draw and keep turn going)
	-Draw a card
	-Check the win/lose conditions

Probably going to end up needing a Drawable interface